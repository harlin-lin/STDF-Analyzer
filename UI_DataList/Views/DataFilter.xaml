<UserControl x:Class="UI_DataList.Views.DataFilter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:prism="http://prismlibrary.com/" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:en="clr-namespace:DataContainer;assembly=DataContainer"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:smCore="clr-namespace:SillyMonkey.Core;assembly=SillyMonkey.Core"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="400"
             prism:ViewModelLocator.AutoWireViewModel="True"
             IsEnabled="{Binding EnFilterPanel}">
    <UserControl.Resources>
        <smCore:BooleanNegationConverter x:Key="negbool"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <TabControl>
            <TabItem Header="Sites">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ListBox x:Name="lbAllSites" FontSize="8" Grid.Column="0" 
                                 ItemsSource="{Binding AllSites}" SelectionMode="Extended">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick" >
                                    <i:InvokeCommandAction Command="{Binding AddSite}" CommandParameter="{Binding ElementName=lbAllSites}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                        <StackPanel Grid.Column="1" VerticalAlignment="Center">
                            <Button Content=">>" Margin="0,0,0,10" Command="{Binding AddAllSites}"/>
                            <Button Content=">" Margin="0,0,0,10" Command="{Binding AddSites}" CommandParameter="{Binding ElementName=lbAllSites}"/>
                            <Button Content="&lt;" Margin="0,0,0,10" Command="{Binding RemoveSites}" CommandParameter="{Binding ElementName=lbEnabledSites}"/>
                            <Button Content="&lt;&lt;" Margin="0,0,0,10" Command="{Binding RemoveAllSites}"/>
                        </StackPanel>
                        <ListBox x:Name="lbEnabledSites" FontSize="8" Grid.Column="2" 
                                 ItemsSource="{Binding EnabledSites}" SelectionMode="Extended">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick" >
                                    <i:InvokeCommandAction Command="{Binding RemoveSite}" CommandParameter="{Binding ElementName=lbEnabledSites}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="HBins">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ListBox x:Name="lbAllHBins" FontSize="8" Grid.Column="0" 
                                 ItemsSource="{Binding AllHBins}" SelectionMode="Extended">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick" >
                                    <i:InvokeCommandAction Command="{Binding AddHBin}" CommandParameter="{Binding ElementName=lbAllHBins}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                        <StackPanel Grid.Column="1" VerticalAlignment="Center">
                            <Button Content=">>" Margin="0,0,0,10" Command="{Binding AddAllHBins}"/>
                            <Button Content=">" Margin="0,0,0,10"  Command="{Binding AddHBins}" CommandParameter="{Binding ElementName=lbAllHBins}" />
                            <Button Content="&lt;" Margin="0,0,0,10" Command="{Binding RemoveHBins}" CommandParameter="{Binding ElementName=lbEnabledHBins}"/>
                            <Button Content="&lt;&lt;" Margin="0,0,0,10" Command="{Binding RemoveAllHBins}"/>
                        </StackPanel>
                        <ListBox x:Name="lbEnabledHBins" FontSize="8" Grid.Column="2" 
                                 ItemsSource="{Binding EnabledHBins}" SelectionMode="Extended">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick" >
                                    <i:InvokeCommandAction Command="{Binding RemoveHBin}" CommandParameter="{Binding ElementName=lbEnabledHBins}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="SBins">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="62*"/>
                            <ColumnDefinition Width="23*"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="85*"/>
                        </Grid.ColumnDefinitions>
                        <ListBox x:Name="lbAllSBins" FontSize="8" Grid.Column="0" 
                                 ItemsSource="{Binding AllSBins}" SelectionMode="Extended" Grid.ColumnSpan="2">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick" >
                                    <i:InvokeCommandAction Command="{Binding AddSBin}" CommandParameter="{Binding ElementName=lbAllSBins}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                        <StackPanel Grid.Column="2" VerticalAlignment="Center">
                            <Button Content=">>" Margin="0,0,0,10" Command="{Binding AddAllSBins}"/>
                            <Button Content=">" Margin="0,0,0,10" Command="{Binding AddSBins}" CommandParameter="{Binding ElementName=lbAllSBins}" />
                            <Button Content="&lt;" Margin="0,0,0,10" Command="{Binding RemoveSBins}" CommandParameter="{Binding ElementName=lbEnabledSBins}"/>
                            <Button Content="&lt;&lt;" Margin="0,0,0,10" Command="{Binding RemoveAllSBins}"/>
                        </StackPanel>
                        <ListBox x:Name="lbEnabledSBins" FontSize="8" Grid.Column="3" 
                                 ItemsSource="{Binding EnabledSBins}" SelectionMode="Extended">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick" >
                                    <i:InvokeCommandAction Command="{Binding RemoveSBin}" CommandParameter="{Binding ElementName=lbEnabledSBins}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Parts">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="23"/>
                        <RowDefinition/>
                        <RowDefinition Height="23"/>
                        <RowDefinition/>
                        <!--<RowDefinition Height="30"/>-->
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal"  ToolTip="Edit the part ID, split the IDs with ';' e.g:1;11;999">
                        <TextBlock Text="Index" VerticalAlignment="Center" FontSize="8" Margin="2,0,0,0"/>
                        <ComboBox Width="60" Margin="3,0" FontSize="8" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <ComboBoxItem Content="Mask" FontSize="8" ToolTip="Mask the indexes from the below user input window" IsSelected="{Binding MaskOrEnableIds,Converter={StaticResource negbool}, Mode=TwoWay}"/>
                            <ComboBoxItem Content="Enable" FontSize="8" ToolTip="Enable only the indexes from the below user input window" IsSelected="{Binding MaskOrEnableIds, Mode=TwoWay}"/>
                        </ComboBox>
                    </StackPanel>
                    <TextBox  Grid.Row="1" Text="{Binding MaskEnableChips, Mode=TwoWay}" FontSize="8" AcceptsReturn="True" VerticalContentAlignment="Top" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto">
                        <TextBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Clear" Command="{Binding ClearIds}" />
                            </ContextMenu>
                        </TextBox.ContextMenu>
                    </TextBox>
                    <StackPanel  Grid.Row="2" Orientation="Horizontal" ToolTip="Edit the part Cords, split the Cords with ';', x in the front, split the x,y with ',', e.g:1,1;99,32;0,33">
                        <TextBlock Text="Cord " VerticalAlignment="Center" FontSize="8" Margin="2,0,0,0"/>
                        <ComboBox Width="60" Margin="3,0" FontSize="8" VerticalAlignment="Center" HorizontalAlignment="Left">
                            <ComboBoxItem Content="Mask" FontSize="8" ToolTip="Mask the cord from the below user input window" IsSelected="{Binding MaskOrEnableCords,Converter={StaticResource negbool}, Mode=TwoWay}"/>
                            <ComboBoxItem Content="Enable" FontSize="8" ToolTip="Enable only the cord from the below user input window" IsSelected="{Binding MaskOrEnableCords, Mode=TwoWay}"/>
                        </ComboBox>
                        <Button Width="20" Height="20" ToolTip="Get whole duplicated cords"
                              Command="{Binding CmdGetDupCords}"
                              Margin="20,0,0,0" BorderThickness="1" Background="Transparent">
                            <Image Source="/SillyMonkey.Core;component/Resource/icon/Material-AutoFix.png" Width="16" Height="16"/>
                        </Button>
                        <Button Width="48" Height="20" ToolTip="Get fresh part index of duplicated cords"
                              Command="{Binding CmdGetFreshIdx}"
                              Margin="20,0,0,0" BorderThickness="1" Background="Transparent" Content="FRESH"/>
                        <Button Width="48" Height="20" ToolTip="Get Re-Test part index of duplicated cords"
                              Command="{Binding CmdGetRtIdx}"
                              Margin="20,0,0,0" BorderThickness="1" Background="Transparent" Content="Re-Test"/>
                    </StackPanel>
                    <TextBox Grid.Row="3" Text="{Binding MaskEnableCords, Mode=TwoWay}" FontSize="8" AcceptsReturn="True"  VerticalContentAlignment="Top" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto">
                        <TextBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Clear"  Command="{Binding ClearCords}" />
                            </ContextMenu>
                        </TextBox.ContextMenu>
                    </TextBox>
                    <!--<StackPanel Grid.Row="4" Orientation="Horizontal" >
                        <CheckBox Content="Duplicate" FontSize="8" Margin="10,0,0,0" IsChecked="{Binding IfmaskDuplicateChips, Mode=TwoWay}" VerticalContentAlignment="Center"/>
                        <ComboBox Name="judgeMode" FontSize="8" Width="60" Margin="10,0,0,0" ItemsSource="{Binding Source={StaticResource judgeM}}" SelectedValue="{Binding JudgeMode, Mode=TwoWay}"/>
                        <ComboBox Name="maskMode" FontSize="8" Width="80" Margin="10,0,0,0" ItemsSource="{Binding Source={StaticResource dupliM}}" SelectedValue="{Binding DuplicateSelectMode}"/>
                    </StackPanel>-->
                </Grid>
            </TabItem>
            <TabItem Header="ItemParts">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="1.5*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <ComboBox Grid.Row="0" x:Name="cbItems" ItemsSource="{Binding Items}" Margin="0,1">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}_TN:{1}_{2}">
                                            <Binding Path="Idx"/>
                                            <Binding Path="TestNumber"/>
                                            <Binding Path="TestText"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged" >
                                <i:InvokeCommandAction Command="{Binding CmdSelectItem}" CommandParameter="{Binding ElementName=cbItems, Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <Button Content="-∞" Margin="0" Command="{Binding PartFilterApplyNegInfty}"/>
                        <TextBox Width="35" Margin="2,0,0,0" Text="{Binding PartFilterLowLimit}"/>
                        <Label Content="=&lt;V&lt;=" Margin="4,0,2,0"/>
                        <TextBox Width="35" Margin="2,0,0,0" Text="{Binding PartFilterHighLimit}"/>
                        <Button Content="+∞" Margin="2,0,0,0" Command="{Binding PartFilterApplyPosInfty}"/>
                        <Button Content="Test" Margin="2,0,0,0" Command="{Binding PartFilterTryLimit}"/>
                        <Button Content="Add" Margin="2,0,0,0" Command="{Binding PartFilterAddFilter}"/>
                    </StackPanel>
                    <TextBox Grid.Row="2" Text="{Binding SyncItemInfo}" IsReadOnly="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"  VerticalContentAlignment="Top"/>
                    <ListBox Grid.Row="3" x:Name="lbItemFilters" ItemsSource="{Binding ItemFilters}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick" >
                                <i:InvokeCommandAction Command="{Binding RemoveItemLimitFilter}" CommandParameter="{Binding ElementName=lbItemFilters, Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                </Grid>
            </TabItem>
        </TabControl>
        <Button Grid.Row="1" Content="Reset" FontSize="8" Height="20" Width="80" Command="{Binding ResetFilter}" HorizontalAlignment="Left" Margin="20,0,0,0" />
        <Button Grid.Row="1" Content="ApplyFilter" FontSize="8" Height="20" Width="80" Command="{Binding ApplyFilter}" HorizontalAlignment="Right" Margin="0,0,20,0" />
    </Grid>
</UserControl>
